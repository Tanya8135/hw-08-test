{"version":3,"file":"static/js/698.bebdca94.chunk.js","mappings":"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","sources":["hooks/useContact/useContact.js","webpack://hw-08-test/./src/components/ContactForm/ContactForm.module.css?b5b2","webpack://hw-08-test/./src/components/ButtonLib/ButtonLib.module.css?0ec0","components/ButtonLib/ButtonLib.jsx","components/ContactForm/ContactForm.jsx","webpack://hw-08-test/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://hw-08-test/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://hw-08-test/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { selectFilteredContacts, selectIsLoading } from \"redux/contacts/selectors\";\n\nexport const useContact = () => {\n    const isLoading = useSelector(selectIsLoading);\n    const filteredContacts = useSelector(selectFilteredContacts);\n    const contacts = useSelector(selectFilteredContacts);\n\n    return {\n        isLoading,\n        filteredContacts,\n        contacts,\n    };\n};","// extracted by mini-css-extract-plugin\nexport default {\"subTitle\":\"ContactForm_subTitle__uRYz+\",\"btnBox\":\"ContactForm_btnBox__PlDEK\"};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ButtonLib_btn__4JJKz\"};","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport { useButton } from '@mui/base/useButton';\nimport { styled } from '@mui/system';\nimport Stack from '@mui/material/Stack';\n\nimport css from './ButtonLib.module.css';\n\nconst CustomButton = React.forwardRef(function CustomButton(props, ref) {\n  const { children, disabled } = props;\n  const { active, focusVisible, getRootProps } = useButton({\n    ...props,\n    rootRef: ref,\n  });\n\n  const classes = {\n    active,\n    disabled,\n    focusVisible,\n  };\n\n  return (\n    <CustomButtonRoot {...getRootProps()} className={clsx(classes)}>\n      {children}\n    </CustomButtonRoot>\n  );\n});\n\nCustomButton.propTypes = {\n  children: PropTypes.node,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n};\n\nexport default function UseButton() {\n  return (\n    <Stack spacing={2} direction=\"row\">\n      <button className={css.btn}>Add contact</button>\n    </Stack>\n  );\n}\n\nconst blue = {\n  500: '#007FFF',\n  600: '#0072E5',\n  700: '#0059B2',\n};\n\nconst CustomButtonRoot = styled('button')`\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  // background-color: ${blue[500]};\n  background-color: transparent;\n\n  color: #b1b1b1;\n  border-radius: 8px;\n  border: 1px solid #c0c0c0;\n  font-weight: 600;\n  padding: 8px 16px;\n  cursor: pointer;\n  transition: all 150ms ease;\n\n  &:hover {\n    // background-color: ${blue[600]};\n    background-color: #c0c0c0;\n    color: white;\n  }\n\n  &.active {\n    background-color: ${blue[700]};\n  }\n\n  &.focusVisible {\n    box-shadow: 0 4px 20px 0 rgb(61 71 82 / 0.1), 0 0 0 5px rgb(0 127 255 / 0.5);\n    outline: none;\n  }\n\n  &.disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n","// import { useDispatch } from 'react-redux';\n// import { useContact } from 'hooks/useContact';\n// import { addContact } from 'redux/contacts/operations';\n// import css from './ContactForm.module.css';\n\n// export const ContactForm = () => {\n//   const dispatch = useDispatch();\n//   const { isLoading, filteredContacts } = useContact();\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const form = e.target;\n//     const name = form.elements.name.value;\n//     const number = form.elements.number.value;\n\n//     if (isLoading) {\n//       return;\n//     }\n\n//     const dublicateContact = filteredContacts.some(\n//       contact => contact.name.toLowerCase() === name.toLowerCase()\n//     );\n\n//     if (dublicateContact) {\n//       alert(`${name} is already in contacts!`);\n//     } else {\n//       dispatch(addContact({ name, number }));\n//     }\n\n//     form.reset();\n//   };\n\n//   return (\n//     <form className={css.form} onSubmit={handleSubmit}>\n//       <div className={css.contactFormBox}>\n//         <label className={css.subTitle}>\n//           Name\n//           <input\n//             className={css.input}\n//             type=\"text\"\n//             name=\"name\"\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//             required\n//             placeholder=\"Enter name\"\n//             autoFocus=\"on\"\n//           />\n//         </label>\n//         <label className={css.subTitle}>\n//           Number\n//           <input\n//             className={css.input}\n//             type=\"tel\"\n//             name=\"number\"\n//             pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//             required\n//             placeholder=\"Enter phone number\"\n//           />\n//         </label>\n//       </div>\n//       <button className={css.btn} type=\"submit\">\n//         Add contact\n//       </button>\n//     </form>\n//   );\n// };\n\nimport { useDispatch } from 'react-redux';\nimport { useContact } from 'hooks/useContact';\nimport { addContact } from 'redux/contacts/operations';\n\nimport css from './ContactForm.module.css';\n\nimport UseButton from 'components/ButtonLib/ButtonLib';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const { isLoading, filteredContacts } = useContact();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (isLoading) {\n      return;\n    }\n\n    const dublicateContact = filteredContacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (dublicateContact) {\n      alert(`${name} is already in contacts!`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <div className={css.contactFormBox}>\n        <label className={css.subTitle}>\n          Name\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Enter name\"\n            autoFocus=\"on\"\n          />\n        </label>\n        <label className={css.subTitle}>\n          Number\n          <input\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Enter phone number\"\n          />\n        </label>\n      </div>\n      {/* <button className={css.btn} type=\"submit\">\n        Add contact\n      </button> */}\n      <div className={css.btnBox}>\n        <UseButton>\n          <button type=\"submit\">Add contact</button>{' '}\n        </UseButton>\n      </div>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Loader\":\"Loader_Loader__wqo9C\"};","import { MutatingDots } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.Loader}>\n      <MutatingDots\n        height=\"100\"\n        width=\"100\"\n        color=\"#fce357\"\n        secondaryColor=\"#4fa94d\"\n        radius=\"12.5\"\n        ariaLabel=\"mutating-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"btnDelete\":\"ContactList_btnDelete__Eeo9v\",\"contactInfo\":\"ContactList_contactInfo__Sgq6p\"};","import { useDispatch } from 'react-redux';\nimport { useContact } from 'hooks/useContact';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\nimport { Loader } from 'components/Loader/Loader';\n\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const { isLoading, contacts } = useContact();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      <div>\n        {isLoading && <Loader />}\n        <ul className={css.list}>\n          {contacts.map(contact => (\n            <li key={contact.id} className={css.item}>\n              <span className={css.contactInfo}>{contact.name}:</span>\n              <span className={css.contactInfo}>{contact.number}</span>\n              <button\n                type=\"button\"\n                className={css.btnDelete}\n                onClick={() => handleDelete(contact.id)}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"subTitle\":\"Filter_subTitle__ntO3U\",\"input\":\"Filter_input__N7T3z\"};","import { setStatusFilter } from 'redux/contacts/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  \n  return (\n    <div className={css.filterBox}>\n      <label className={css.subTitle}>Find contacts by Name</label>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter filter\"\n        onChange={event => dispatch(setStatusFilter(event.target.value))}\n      />\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Helmet } from \"react-helmet\";\n\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport ContactList from \"components/ContactList/ContactList\";\n// import ContactEditor from \"components/ContactEditor\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { fetchContacts } from \"redux/contacts/operations\";\n\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <div>\n            <Helmet>\n                <title>Your contacts</title>\n            </Helmet>\n            <h1>Phonebook</h1>\n            <ContactForm />\n            {/* <ContactEditor /> */}\n            <h2>Contacts</h2>\n            <Filter />\n            <ContactList />\n        </div>\n    )\n};"],"names":["useContact","isLoading","useSelector","selectIsLoading","filteredContacts","selectFilteredContacts","contacts","UseButton","Stack","spacing","direction","className","css","blue","ContactForm","styled","dispatch","useDispatch","onSubmit","e","preventDefault","form","target","name","elements","value","number","some","contact","toLowerCase","alert","addContact","reset","type","pattern","title","required","placeholder","autoFocus","Loader","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible","useEffect","fetchContacts","map","onClick","id","deleteContact","Filter","onChange","event","setStatusFilter","Contacts","Helmet"],"sourceRoot":""}